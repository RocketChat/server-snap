name: rocketchat-server
title: Rocket.Chat Server
base: core18
version: 4.1.2
summary: An Open Source Slack Alternative
description: |
  Have your own Slack like online chat, built with Meteor. https://rocket.chat/

epoch: 2*

grade: stable
confinement: strict

plugs:
  network:

apps:
  rocketchat-mongo:
    command: bin/mongod.service
    daemon: forking
    plugs: [network-bind]

  rocketchat-server:
    command: bin/rocketchat.service
    environment:
      XDG_DATA_HOME: $SNAP/usr/share
      FONTCONFIG_PATH: $SNAP/etc/fonts/config.d
      FONTCONFIG_FILE: $SNAP/etc/fonts/fonts.conf
      DEPLOY_METHOD: snap
      NODE_ENV: production
      BABEL_CACHE_DIR: /tmp
      LC_ALL: C
    daemon: simple
    after: [rocketchat-mongo]
    plugs:
      - network-bind
      - removable-media

  rocketchat-caddy:
    command: bin/caddy.service
    environment:
      LC_ALL: C
    daemon: simple
    plugs: [network-bind]

  mongo:
    command: bin/mongo
    environment:
      LC_ALL: C

  backupdb:
    command: bin/backupdb.sh
    environment:
      LC_ALL: C

  restoredb:
    command: bin/restoredb.sh
    environment:
      LC_ALL: C

hooks:
  install: { plugs: [network-bind] }

parts:
  mongodb:
    plugin: dump
    source:
      - on amd64: https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-ubuntu1804-3.6.23.tgz
      # - on arm64: https://fastdl.mongodb.org/linux/mongodb-linux-aarch64-ubuntu2004-4.4.10.tgz
    stage-packages:
      # For the dependecies:
      # https://docs.mongodb.com/manual/tutorial/install-mongodb-on-ubuntu-tarball/#install-mongodb-community-edition
      - libcurl4
      - openssl
      - liblzma5
    stage:
      - bin/mongod
      - bin/mongo
      - bin/mongodump
      - bin/mongorestore

  # mongodb-tools:
  #   plugin: dump
  #   source:
  #     - on amd64: https://fastdl.mongodb.org/tools/db/mongodb-database-tools-ubuntu2004-x86_64-100.5.0.tgz
  #     - on arm64: https://fastdl.mongodb.org/tools/db/mongodb-database-tools-ubuntu2004-arm64-100.5.0.tgz
  #   stage:
  #     - bin/mongodump
  #     - bin/mongorestore

  rocketchat:
    plugin: dump
    source: https://cdn-download.rocket.chat/build/rocket.chat-$SNAPCRAFT_PROJECT_VERSION.tgz
    build-snaps:
      - node/12/stable
    stage-snaps:
      - node/12/stable
    build-packages:
      - build-essential
      - on arm64:
          - autoconf
          - automake
          - libtool
    override-build: |
      cd programs/server

      [ "$SNAP_ARCH" = "arm64" ] && rm npm/node_modules/sharp/vendor -rf
      NODE_ENV=production npm i --unsafe-perm

      snapcraftctl build
    filesets:
      excluded:
        - -README
        - -README.md
        - -LICENSE
        # filesets are excluding hidden files
        # BUG - need to fix upstream
        # not a bug, design choice
        - .node_version.txt
        - "*"
    stage: [ $excluded ]

  caddy:
    plugin: dump
    source:
      - on amd64: https://github.com/caddyserver/caddy/releases/download/v2.4.3/caddy_2.4.3_linux_amd64.tar.gz
      - on arm64: https://github.com/caddyserver/caddy/releases/download/v2.4.3/caddy_2.4.3_linux_arm64.tar.gz
    organize:
      caddy: bin/caddy
    filesets:
      excluded:
        - -README.md
        - -LICENSE
    stage: [ $excluded ]

  daemons:
    plugin: dump
    source: "./daemons"
    organize:
      "*": "bin/"

  commands:
    plugin: dump
    source: "./commands"
    organize:
      "*": "bin/"

  script-dependecies:
    plugin: nil
    stage-packages:
      # for hooks::configure::validate_url
      - dnsutils
      # for install::jq
      - jq

  # migrations:
  #   plugin: dump
  #   source: ./migrations
  #   organize:
  #     "*": migrations/
